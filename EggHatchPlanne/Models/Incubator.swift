import Foundation

/// –í–∏–¥—ã –ø—Ç–∏—Ü –¥–ª—è –∏–Ω–∫—É–±–∞—Ü–∏–∏
enum BirdSpecies: String, CaseIterable, Codable {
    case chicken = "CHICKEN"
    case duck = "DUCK"
    case goose = "GOOSE"
    case turkey = "TURKEY"
    case guineaFlow = "GUINEA FOWL"
    
    var displayName: String {
        switch self {
        case .chicken:
            return "üêî CHICKEN"
        case .duck:
            return "ü¶Ü DUCK"
        case .goose:
            return "ü¶Ü GOOSE"
        case .turkey:
            return "ü¶É TURKEY"
        case .guineaFlow:
            return "üê§ GUINEA FOWL"
        }
    }
    
    /// –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –∏–Ω–∫—É–±–∞—Ü–∏–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –≤–∏–¥–∞ –ø—Ç–∏—Ü—ã
    var incubationDays: Int {
        switch self {
        case .chicken:
            return 21
        case .duck:
            return 28
        case .goose:
            return 30
        case .turkey:
            return 28
        case .guineaFlow:
            return 27
        }
    }
}

/// –¢–∏–ø—ã –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –¥–ª—è –∏–Ω–∫—É–±–∞—Ü–∏–∏
enum ReminderType: String, CaseIterable, Codable {
    case turnEggs = "TURN EGGS"
    case checkTemperature = "CHECK TEMPERATURE"
    case checkHumidity = "CHECK HUMIDITY"
    
    var displayName: String {
        return self.rawValue
    }
}

/// –ú–æ–¥–µ–ª—å –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∏–Ω–∫—É–±–∞—Ç–æ—Ä–∞
struct Incubator: Identifiable, Codable {
    /// –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä
    var id = UUID()
    /// –í—ã–±—Ä–∞–Ω–Ω—ã–π –≤–∏–¥ –ø—Ç–∏—Ü—ã
    var selectedSpecies: BirdSpecies
    /// –î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ –∏–Ω–∫—É–±–∞—Ü–∏–∏
    var startDate: Date
    /// –î–∞—Ç–∞ –≤—ã–ª—É–ø–ª–µ–Ω–∏—è (—Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏)
    var hatchingDate: Date
    /// –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —è–∏—Ü
    var numberOfEggs: Int
    /// –°–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
    var reminders: [ReminderType]
    /// –ó–∞–º–µ—Ç–∫–∞
    var note: String
    /// –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–∏
    var createdAt: Date = Date()
    
    init(
        selectedSpecies: BirdSpecies,
        startDate: Date = Date(),
        numberOfEggs: Int,
        reminders: [ReminderType] = [],
        note: String = ""
    ) {
        self.selectedSpecies = selectedSpecies
        self.startDate = startDate
        // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –¥–∞—Ç—É –≤—ã–ª—É–ø–ª–µ–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–∏–¥–∞ –ø—Ç–∏—Ü—ã
        self.hatchingDate = Calendar.current.date(byAdding: .day, value: selectedSpecies.incubationDays, to: startDate) ?? startDate
        self.numberOfEggs = numberOfEggs
        self.reminders = reminders
        self.note = note
    }
}
